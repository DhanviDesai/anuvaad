swagger: '2.0'
info:
  version: 1.0.0
  title: Anuvaad User Management
  description: >-
    A python based microservice for user management. This service will expose
    REST APIs to create, search and update users.
  contact:
    name: Lipika Das
    email: lipika.das@tarento.com
    
schemes:
  - http
  - https
  
host: localhost

basePath: /anuvaad/user-mgmt

consumes:
  - application/json
produces:
  - application/json
  
paths:

  /v1/users/create:
    post:
      summary: REST API to register/create a new user.
      description: This API helps to create a new user.
      parameters:
        - name: request
          in: body
          required: true
          description: The user account to create.
          schema:
            $ref: '#/definitions/CreateUserRequest'
      tags:
        - Create User
      responses:
        '200':
          description: New users was created successfully.
          schema:
            $ref: '#/definitions/CreateUserResponse'
        '400':
          description: On input errors causing failure in user account creation.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: On system level errors causing failure in user account creation.
          schema:
            $ref: '#/definitions/Error'
            
            
            
  /v1/users/update:
    post:
      summary: REST API to update users.
      description: >-
        This API helps to search an user is existing or not based on various
        criteria.
      parameters:
        - name: request
          in: body
          required: true
          description: Request to search user account.
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      tags:
        - Update User
      responses:
        '200':
          description: Users was updated successfully.
          schema:
            $ref: '#/definitions/UpdateUserResponse'
        '400':
          description: On input errors causing failure in user account updation.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: On system level errors causing failure in user account updation.
          schema:
            $ref: '#/definitions/Error'
            
            
          
  /v1/users/search:
    post:
      summary: REST API to search users.
      description: This API helps to search an existing users.
      parameters:
        - name: request
          in: body
          required: true
          description: Request to search user account.
          schema:
            $ref: '#/definitions/SearchUserRequest'
      tags:
        - Update User
      responses:
        '200':
          description: Users was updated successfully.
          schema:
            $ref: '#/definitions/SearchUserResponse'
          
          
definitions:


  User:
    type: object
    properties:
      userID:
        type: string
        description: Unique 32-bit UUID per user.
      name:
        type: string
        description: Name of the user.
      userName:
        type: string
        description: User Name for the user as chosen by the user, unique for every user.
      password:
        type: string
        description: Password for the user profile as chosen by the user abiding by the pwd policy defined by the system. encrypted and stored.
      email:
        type: string
        description: email id of the user.
      phoneNo:
        type: string
        description: mobile number of the user
      roles:
        type: array
        items:
          type: object
          $ref: '#/definitions/Role'
        
        
  Role:
    type: object
    properties:
      roleCode:
        type: string
        description: Unique code per role.
      roleDesc:
        type: string
        description: Description of the role.
          

  CreateUserRequest:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/User'
        description: Details of the users to be registered.

          
  CreateUserResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/User'
        description: Details of the users that got registered.
        
        
  UpdateUserRequest:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/User'
        description: Details of the users to be updated.

          
  UpdateUserResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/User'
        description: Details of the users that got updated.
        
        
  SearchUserRequest:
    type: object
    properties:
      userIDs:
        type: array
        items:
          type: string
        description: Unique IDs of the users.
      userNames:
        type: array
        items:
          type: string
        description: Unique usernames of the users.
      roleCodes:
        type: array
        items:
          type: string
          description: Parameter to search on roles.

        
  SearchUserResponse:
    type: object
    properties:
      response:
        type: array
        items:
          type: object
          $ref: '#/definitions/User'
        description: List of the existing users with all details except password.
        
        
  Error:
    type: object
    properties:
      errorID:
        type: string
        description: Unique UUID for the error.
      cause:
        type: string
        description: System generated cause of the error
      code:
        type: string
        description: Unique code signifying the category for the error.
      message:
        type: string
        description: User readable message pertaining to the error
      timeStamp:
        type: number
        description: 13 digit epoch timestamp

